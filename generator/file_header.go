package generator

import (
	"fmt"
)

// FileHeaderGenerator handles generation of file headers and metadata
type FileHeaderGenerator struct {
	versionString string
	licenseString string
}

// NewFileHeaderGenerator creates a new file header generator
func NewFileHeaderGenerator(versionString, licenseString string) *FileHeaderGenerator {
	return &FileHeaderGenerator{
		versionString: versionString,
		licenseString: licenseString,
	}
}

// GenerateFileHeader generates the standard file header for Solidity files
func (fhg *FileHeaderGenerator) GenerateFileHeader(b *WriteableBuffer) {
	b.P(fmt.Sprintf("// File automatically generated by protoc-gen-sol %s", fhg.versionString))
	b.P(fmt.Sprintf("// SPDX-License-Identifier: %s", fhg.licenseString))
	b.P("pragma solidity ^0.8.19;")
	b.P0()
}

// GeneratePackageComment generates a package comment if a package name is provided
func (fhg *FileHeaderGenerator) GeneratePackageComment(packageName string, b *WriteableBuffer) {
	if len(packageName) > 0 {
		b.P(fmt.Sprintf("// Package: %s", packageName))
	}
}
